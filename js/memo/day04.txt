프로그래밍 패러다임
  - 개발자에게 프로그래머로서 관심을 갖게하고 결정하는 역할(개발 방법)

패러다임의 종류
  1) 명령형
    -절차 지항형 : 순서를 중요시하며 컴퓨터의 처리 구조와 비슷하게 개발, 속도가 빠르다(C, cobol)
    -객체 지향형 : 객체(집단) 상호 작용을 중요시하며 개발, 유지 보수가 좋다(JAVA, C++)

  2) 선언형
    -함수 지향형 : 순수 함수를 조합하고 프로그래밍하는 방법을 지향, 재사용성이 좋다(JavaScript)

함수(function)란?
  - 코드 블록으로 감싸져 있는 문으로 이루어진 하나의 실행 단위

함수의 선언
    function 함수명(매개변수1, 매개변수2, ...){
        함수를 사용했을 때 실행할 문장
        필요시 return
    }

함수의 사용 
    함수명(매개변수1, 매개변수2,.....)


return
   - 함수의 종료를 의미하며, return이 없다면 비즈니스 로직만 실행하고 값은 undefind
   return 키워드가 있다면 통째로를 return 값으로 보아야 한다   .

함수의 이름짓기
   - showMessage(..)     // 메시지를 보여줌
   - getAge(..)          // 나이를 나타내는 값을 얻고 그 값을 반환함
   - calcSum(..)         // 합계를 계산하고 그 결과를 반환함
   - createForm(..)      // form을 생성하고 만들어진 form을 반환함
   - checkPermission(..) // 승인 여부를 확인하고 true나 false를 반환함

함수의 규칙
   - 하나의 함수는 하나의 동작만 수행한다.
   - 함수는 이름에 언급 되어있는 동작을 반드시 수행해야 한다.
   - 언급된 기능외의 동작을 수행하면 안된다.

익명함수 : 이름이 없는 함수
   - 다른 함수의 매개 변수로 전달되어 바로 실행되는 함수
   - 매개변수, 콜백함수, 클로저, 즉시 실행 함수
   - 재사용성이 없는 경우에만 바로 사용된다.