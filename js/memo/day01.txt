JS(Javascript)
   1. 퍼즐 조각처럼 코드 형태로 HTML 페이지에 내장된다. 스크립트는 어디에도 넣을 수 있다.
   2. 컴파일 과정 없이 브라우저 내부의 자바스크립트 처리기(인터프리터)에 의해 바로 실행된다.
   - 개발의 발전됨에 따라 컴파일 과정이 가능해졌으며, Node.js로 서버 환경을 구축한다.

웹 페이지에서 자바스크립트의 역할
   - 웹 페이지 3가지(HTML-정보, CSS-디자인, JS-연산)코드가 결합되어 작성된다.
   - 자바스크립트는 사용자의 입력을 처리하거나 웹 애플리케이션을 작성하는 등 여러가지 역할을 수행한다.
   - 웹 페이지의 동적 제어에 사용된다.
      1) 사용자의 입력 및 연산
      2) 웹 페이지 내용 및 모양의 동적 제어
      3) 브라우저 제어
      4) 웹 서버와의 통신
      5) 웹 애플리케이션 작성

자바스크립트를 작성할 수 있는 위치
   1) HTML 태그의 이벤트 리스너 속성에 작성
      - 태그에는 마우스가 클릭되거나 키보드의 키가 입력 되는 등의 이벤트(반응)가 발생한다.
      이 때 처리하는 코드를 등록하는 리스너 속성이 있다.

   2) <script></script> 태그 안에서 작성된다.
      - <head></head>, <body></body>, body태그 밖 등 어디든 들어갈 수 있다.
      웹 페이지 내에서 여러 번 작성할 수 있다.
   3) .js 자바스크립트 파일에 작성할 수 있다
      - 자바스크립트 코드를 확장자가 .js인 파일에 별도로 저장하여 <script src=".js경로"></script>로 불러올 수 있다.

   4) URL 부분에 작성
      - <a>태그의 속성 중 href="javascript:"등에도 자바스크립트 코드를 작성할 수 있다.
      하지만 href 속성에는 반드시 "javascript:"라는 키워드를 작성해야 한다.

자바스크립트의 탄생
   - 1995년, 넷스케이프 커뮤니케이션즈에서 웹페이지의 보조적인 기능을 수행하기 위해 브라우저에서 동작하는
   경량 프로그래밍 언어를 도입함. 이것이 브랜던 아이크라는 사람이 만든 자바스크립트이다.

자바스크립트의 표준화
   - 자바스크립트의 파생 버전인 JScript를 인터넷에 탑재했으나, 표준화 되지 못했다.
   - 브라우저에 따라 웹페이지가 정상적으로 동작하지 않는 크로스 브라우징 이슈가 발생해서 자바스크립트의 표준화의 필요성이 대두되었다.
   - 컴퓨터 시스템 표준을 관리하는 비영리 기구인 ECMA International
   - 표준화된 자바스크립트가 완성되었고 ECMAScript로 명명되었다.
   - ECMAScript 6는 let/const 키워드, 화살표 함수, 클래스, 모듈 등 같이 범용 프로그래밍 언어로서 갖춰야할 기능들을 대거 도입하는 큰 변화가 생겼다.

console이란?
   - shall 또는 browser의 devtools의 콘솔창에서만 확인이 가능하다.
   디버깅을 위해 console.log()로 출력한 것이 사용자에게 보이면 안되기 때문이다.
   개발이 완료 후(릴리즈 버전)에서는 모두 사용자에게 안보이게 해야하며,
   디버깅 완료 후에도 다른 디버깅과 겹치지 않도록 삭제해 주어야 한다.
   console창은 컴퓨터와 개발자가 소통한 결과를 보여주는 창이다.


\n : new line, 개행 문자, 줄바꿈
\t : tab, 위 아래 줄 간격 맞춰 띄기
\" : " 표현
\' : ' 표현
\\ : \ 표현

변수를 사용하는 이유
   -반복되는 값을 쉽게 관리할 수 있다.
   -의미 없는 값을 하나의 정보로 만들기 위해서 사용한다(자료구조)

   x              =           10
   저장공간    대입연산자      값

자바스크립트 식별자(이름, 변수명)
   -식별자란 자바스크립트 개발자가 변수, 상수, 함수에 붙이는 이름이다
   식별자를 만들 때 다음 규칙을 준수해야한다.

   1) 첫 번째 문자 : 알파벳, 언더바, $문자만 사용이 가능하다.
   2) 두 번째 이상 문자 : 알파벳, 언더바, 0-9, $ 사용이 가능하다.
   3) 대소문자 구분 : data 와 DATA는 다르다.
   4) 키워드(예약어) 사용 불가
   5) 카멜 표기명을 잘 따라야 한다